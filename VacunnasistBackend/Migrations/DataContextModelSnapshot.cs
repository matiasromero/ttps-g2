// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacunassistBackend.Data;

#nullable disable

namespace VacunnasistBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VacunassistBackend.Entities.AppliedVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppliedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VaccineId");

                    b.ToTable("AppliedVaccines");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.BatchVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DevelopedVaccineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OverdueQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RemainingQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchNumber")
                        .IsUnique();

                    b.HasIndex("DevelopedVaccineId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("BatchVaccines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatchNumber = "PF1000001",
                            DevelopedVaccineId = 1,
                            DueDate = new DateTime(2022, 11, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 0,
                            PurchaseOrderId = 3,
                            Quantity = 800,
                            RemainingQuantity = 800,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            BatchNumber = "PF1000121",
                            DevelopedVaccineId = 1,
                            DueDate = new DateTime(2022, 11, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 0,
                            PurchaseOrderId = 4,
                            Quantity = 400,
                            RemainingQuantity = 400,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            BatchNumber = "R1000001",
                            DevelopedVaccineId = 2,
                            DueDate = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 0,
                            PurchaseOrderId = 5,
                            Quantity = 560,
                            RemainingQuantity = 560,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            BatchNumber = "FLU12214001",
                            DevelopedVaccineId = 3,
                            DueDate = new DateTime(2022, 11, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 0,
                            PurchaseOrderId = 6,
                            Quantity = 1500,
                            RemainingQuantity = 1500,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            BatchNumber = "FLU12214003",
                            DevelopedVaccineId = 3,
                            DueDate = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 0,
                            PurchaseOrderId = 7,
                            Quantity = 3600,
                            RemainingQuantity = 3200,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            BatchNumber = "FLU13214121",
                            DevelopedVaccineId = 3,
                            DueDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            OverdueQuantity = 3600,
                            PurchaseOrderId = 8,
                            Quantity = 3600,
                            RemainingQuantity = 0,
                            Status = 1
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.DevelopedVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DaysToDelivery")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VaccineText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DevelopedVaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DaysToDelivery = 30,
                            IsActive = true,
                            Name = "Pfizer COVID-19",
                            VaccineText = "{\"Id\":2000,\"Name\":\"COVID-19\",\"Type\":1,\"Doses\":[{\"Id\":2001,\"Number\":0,\"IsReinforcement\":false,\"MinMonthsOfAge\":0,\"DaysAfterPreviousDose\":null},{\"Id\":2002,\"Number\":1,\"IsReinforcement\":false,\"MinMonthsOfAge\":0,\"DaysAfterPreviousDose\":120}]}"
                        },
                        new
                        {
                            Id = 2,
                            DaysToDelivery = 60,
                            IsActive = true,
                            Name = "ROCHE Fiebre amarilla",
                            VaccineText = "{\"Id\":1300,\"Name\":\"Fiebre Amarilla\",\"Type\":0,\"Doses\":[{\"Id\":1301,\"Number\":0,\"IsReinforcement\":false,\"MinMonthsOfAge\":18,\"DaysAfterPreviousDose\":null},{\"Id\":1302,\"Number\":1,\"IsReinforcement\":true,\"MinMonthsOfAge\":132,\"DaysAfterPreviousDose\":null}]}"
                        },
                        new
                        {
                            Id = 3,
                            DaysToDelivery = 15,
                            IsActive = true,
                            Name = "Fluarix Antigripal",
                            VaccineText = "{\"Id\":3000,\"Name\":\"Antigripal\",\"Type\":2,\"Doses\":[{\"Id\":3001,\"Number\":0,\"IsReinforcement\":false,\"MinMonthsOfAge\":0,\"DaysAfterPreviousDose\":365}]}"
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.LocalBatchVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BatchVaccineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DistributionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OverdueQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RemainingQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchVaccineId");

                    b.ToTable("LocalBatchVaccines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatchVaccineId = 5,
                            DistributionDate = new DateTime(2022, 10, 28, 13, 48, 41, 90, DateTimeKind.Local).AddTicks(5544),
                            OverdueQuantity = 0,
                            Province = "Buenos Aires",
                            Quantity = 600,
                            RemainingQuantity = 600
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeliveredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DevelopedVaccineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchNumber")
                        .IsUnique();

                    b.HasIndex("DevelopedVaccineId");

                    b.ToTable("PurchaseOrders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatchNumber = "FLU140012580",
                            DevelopedVaccineId = 3,
                            PurchaseDate = new DateTime(2022, 10, 28, 13, 48, 41, 90, DateTimeKind.Local).AddTicks(5446),
                            Quantity = 1400,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            BatchNumber = "FLU140012581",
                            DevelopedVaccineId = 3,
                            PurchaseDate = new DateTime(2022, 10, 28, 13, 48, 41, 90, DateTimeKind.Local).AddTicks(5452),
                            Quantity = 1200,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            BatchNumber = "PF1000001",
                            DeliveredTime = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 1,
                            ETA = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 9, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 800,
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            BatchNumber = "PF1000121",
                            DeliveredTime = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 1,
                            ETA = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 9, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 400,
                            Status = 2
                        },
                        new
                        {
                            Id = 5,
                            BatchNumber = "R1000001",
                            DeliveredTime = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 2,
                            ETA = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 8, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 560,
                            Status = 2
                        },
                        new
                        {
                            Id = 6,
                            BatchNumber = "FLU12214001",
                            DeliveredTime = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 3,
                            ETA = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 1500,
                            Status = 2
                        },
                        new
                        {
                            Id = 7,
                            BatchNumber = "FLU12214003",
                            DeliveredTime = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 3,
                            ETA = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 3600,
                            Status = 2
                        },
                        new
                        {
                            Id = 8,
                            BatchNumber = "FLU13214121",
                            DeliveredTime = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            DevelopedVaccineId = 3,
                            ETA = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            PurchaseDate = new DateTime(2022, 9, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Quantity = 3600,
                            Status = 2
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HealthWorker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pregnant")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Falsa 1234, La Plata",
                            BirthDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "11111111",
                            Email = "admin@vacunassist.com",
                            FullName = "Administrador",
                            Gender = "other",
                            HealthWorker = false,
                            IsActive = true,
                            PasswordHash = "1000:Imoq+B5td/RqXfViGb59o6cBxDC6rhyw:2REqRyMEXkzN0Jgu/RhcVkGFTCQ+oBtx",
                            Pregnant = false,
                            Province = "Buenos Aires",
                            Role = "administrator",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Falsa 2345, La Plata",
                            BirthDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "22345678",
                            Email = "operador1@vacunassist.com",
                            FullName = "Luis Gutierrez",
                            Gender = "male",
                            HealthWorker = false,
                            IsActive = true,
                            PasswordHash = "1000:QT8SThbwitPhOcSlPW1YtOWXJ+eVsKiA:+UcNd4DKEVw4lSPPahh5ksBaANZR3HWs",
                            Pregnant = false,
                            Province = "Buenos Aires",
                            Role = "operator",
                            UserName = "Operador1"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Calle Falsa 9874, Salta",
                            BirthDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "89785451",
                            Email = "estefania@vacunassist.com",
                            FullName = "Estefania Borzi",
                            Gender = "female",
                            HealthWorker = false,
                            IsActive = true,
                            PasswordHash = "1000:XwLR4bpKTH/XlR9AZSuJeCjhYNKyO/cK:9QLtibTZEiQMAZR1FQ0S5IiKjPo8rOv9",
                            Pregnant = false,
                            Province = "Salta",
                            Role = "operator",
                            UserName = "Operador2"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Calle Falsa 9874, Salta",
                            BirthDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "89785451",
                            Email = "jr@vacunassist.com",
                            FullName = "Jose Luis Rodriguez",
                            Gender = "male",
                            HealthWorker = false,
                            IsActive = true,
                            PasswordHash = "1000:xNNM8tMs0rLnQ0tZXB1K75GVbouRzhK/:k8e/okg/5etUscvReEAMayqPhL5F55h3",
                            Pregnant = false,
                            Province = "Buenos Aires",
                            Role = "analyst",
                            UserName = "Analista1"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Calle Falsa 4567, La Plata",
                            BirthDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "11111111",
                            Email = "vacunador@email.com",
                            FullName = "Vacunador",
                            Gender = "other",
                            HealthWorker = false,
                            IsActive = true,
                            PasswordHash = "1000:m9q4JRvesgnM795LCsN4AEc24Vc0pdku:XII3nsTOu4f/BAWYtg8UIufl+WEn+A7A",
                            Pregnant = false,
                            Province = "Buenos Aires",
                            Role = "vacunator",
                            UserName = "Vacunador"
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.AppliedVaccine", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.User", "User")
                        .WithMany("Vaccines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacunassistBackend.Entities.DevelopedVaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.BatchVaccine", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.DevelopedVaccine", "DevelopedVaccine")
                        .WithMany()
                        .HasForeignKey("DevelopedVaccineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VacunassistBackend.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevelopedVaccine");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.LocalBatchVaccine", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.BatchVaccine", "BatchVaccine")
                        .WithMany("Distributions")
                        .HasForeignKey("BatchVaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchVaccine");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.DevelopedVaccine", "DevelopedVaccine")
                        .WithMany()
                        .HasForeignKey("DevelopedVaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevelopedVaccine");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.BatchVaccine", b =>
                {
                    b.Navigation("Distributions");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.User", b =>
                {
                    b.Navigation("Vaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
